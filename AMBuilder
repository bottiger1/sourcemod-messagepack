# vim: set sts=2 ts=8 sw=2 tw=99 et ft=python:
import os

projectName = 'msgpack'
extName = projectName + '.ext.'

# smsdk_ext.cpp will be automatically added later
sourceFiles = [
  'extension.cpp',
  os.path.join('msgpack', 'src', 'objectc.c'),
  os.path.join('msgpack', 'src', 'unpack.c'),
  os.path.join('msgpack', 'src', 'version.c'),
  os.path.join('msgpack', 'src', 'vrefbuffer.c'),
  os.path.join('msgpack', 'src', 'zone.c'),
]

project = builder.LibraryProject(extName)

if os.path.isfile(os.path.join(builder.currentSourcePath, 'sdk', 'smsdk_ext.cpp')):
  # Use the copy included in the project
  project.sources += [os.path.join('sdk', 'smsdk_ext.cpp')]
else:
  # Use the copy included with SM 1.6 and newer
  project.sources += [os.path.join(Extension.sm_root, 'public', 'smsdk_ext.cpp')]

project.sources += sourceFiles

for sdk_name in Extension.sdks:
  sdk = Extension.sdks[sdk_name]
  if sdk['name'] in ['mock']:
    continue

  sourcepath = builder.currentSourcePath

  for cxx in builder.targets:
    if not cxx.target.arch in sdk['platforms'][cxx.target.platform]:
      continue

    binary = Extension.HL2ExtConfig(project, builder, cxx, projectName + '.ext', sdk)

Extension.extensions += builder.Add(project)
